# ================== #
# build_and_push.yml #
# ================== #

# Define Name
name: Build New Version

# Description:
#   This actions workflow was designed to compile our image and upload it to
#   the Github Container Registry upon detecting an update in the upstream 
#   image.

#
# ===== [ Triggers ] ==========================================================
#

on:
  workflow_dispatch:

#
# ===== [ Jobs ] ==============================================================
#

jobs:

  # 1.) Version Builder
  version-builder:
    name: Build New Version
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:

    # 1.1) Set up Workspace
    - name: Set up workspace
      uses: actions/checkout@v1

    # 1.2) Auth with GHCR
    - name: Authenticate with GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # 1.3) Get Metadata
    - name: Format Metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/azure-agst/twitchbot
        tags: |
          type=raw,value=latest
          type=raw,value={{date 'YYYYMMDD'}}
          type=sha
    
    # 1.4) Set up QEMU for arm64 compilation
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    # 1.5) Set up Docker build
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 1.6) Build and Push
    - name: Build and Push
      uses: docker/build-push-action@v3
      with:
        push: true
        context: .
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # 2.7) Notify Devs
    - name: Notify Devs
      id: notify-devs
      uses: azuresrv/actions-discord-notifier@v1
      with:
        webhook: ${{ secrets.WEBHOOK }}
        message: An update was just published for twitchbot with tags:\n\`\`\`${{join(fromJSON(steps.meta.outputs.json).tags,'\n')}}\`\`\`Check out the build logs for more information.
